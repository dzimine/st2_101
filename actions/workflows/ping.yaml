version: '2.0'

st2_101.ping: # IMPORTANT: the name of the workflow must match the fully-qualified action ref
    description: st2 default.ping # Let's skip the description as I already put it in action meta.
    input:
        - host # This must match to action input.
               # A bit irritating to add it in two places, I know... we'll look at optimizing it.
    output:
        just_output_the_whole_worfklow_context: <% $ %>
        # Output defines what workflow action returns.
        # We'll figure later what output we'll need, if anything.
        # For now, just publish the whole workflow end-state. Helps debugging.

    tasks:
        # This task looks up the st2 server address dynamically but assumes there is only one interface.
        # Multiple interfaces will cause an error on post_error_to_slack.message URL.  
        get_addr:
            action: core.local cmd="/sbin/ip -o -4 addr list | awk '$0 !~ /127.0.0.1/ {print $4}' | sed 's/\/.*//'"
            publish:
                st2_ip: <% task(get_addr).result.stdout %>
            on-success:
                - ping_host
            on-error:
                - post_error_to_slack
                - fail

        ping_host:
            action: core.local cmd="ping -c 1 -w 1 <% $.host %>"
            publish:
                ping_output: <% task(ping_host).result.stdout %>
            on-success: 
                -  append_stats
            on-error:
                - post_error_to_slack
                - fail # Set workflow to "FAILED" explicitly.

        append_stats:
            action: core.local
            input:
                cmd: printf "\n\n%s\n%s\n" "`date`" "<% $.ping_output %>" >> /tmp/ping.log

        post_error_to_slack:
            action: slack.post_message
            input:
                message: |
                    No ping to <% $.host %>. Check it out:
                    http://<% $.st2_ip %>:8080/#/history/<% env().st2_execution_id %>
